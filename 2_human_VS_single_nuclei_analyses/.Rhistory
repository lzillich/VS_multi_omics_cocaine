0:11
c(0:11)
remove.packages(Seurart)
remove.packages(Seurat)
remove.packages("Seurat")
remove.packages("SeuratObject")
BiocManager::install("Seurat")
remove.packages("harmony")
devtools::install_github("immunogenomics/harmony",build_vignettes = T)
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(dplyr)
library(ggplot2)
library(cowplot)
library(openxlsx)
set.seed(42)
ctrl <- read.table(url("https://raw.githubusercontent.com/yelabucsf/demuxlet_paper_code/master/fig3/ye1.ctrl.8.10.sm.best"), head = T, stringsAsFactors = F)
View(ctrl)
stim <- read.table(url("https://raw.githubusercontent.com/yelabucsf/demuxlet_paper_code/master/fig3/ye2.stim.8.10.sm.best"), head = T, stringsAsFactors = F)
info <- rbind(ctrl, stim)
info$BARCODE <- gsub(pattern = "\\-", replacement = "\\.", info$BARCODE)
View(info)
# only keep the cells with high-confidence sample ID
info <- info[grep(pattern = "SNG", x = info$BEST), ]
# remove cells with duplicated IDs in both ctrl and stim groups
info <- info[!duplicated(info$BARCODE) & !duplicated(info$BARCODE, fromLast = T), ]
# now add the sample IDs to ifnb
rownames(info) <- info$BARCODE
info <- info[, c("BEST"), drop = F]
names(info) <- c("donor_id")
ifnb <- AddMetaData(ifnb, metadata = info)
seurat <- readRDS( "/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/2_data_processed/2_harmony_object.rds"))
seurat <- readRDS( "/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/2_data_processed/2_harmony_object.rds")
View(seurat@meta.data)
table(seurat$orig.ident)
library(Seurat)
library(ggplot2)
library(cowplot)
library(openxlsx)
set.seed(42)
seurat <- JoinLayers(seurat)
DefaultAssay(seurat) <- "RNA"
Idents(seurat) <- "CUD"
# Remove MT genes from the DE analysis
genes <- rownames(seurat[["RNA"]]$counts)
genes2<- gsub('^MT-(.*)', NA, genes)
genes <- genes[!is.na(genes2)]
# Pseudo-bulked DE testing
pseudo_seurat <- AggregateExpression(seurat, assays = "RNA", return.seurat = T, group.by = c("orig.ident", "CUD", "celltypes"))
# each 'cell' is a donor-condition-celltype pseudobulk profile
tail(Cells(pseudo_ifnb))
# each 'cell' is a donor-condition-celltype pseudobulk profile
tail(Cells(pseudo_seurat))
# each 'cell' is a donor-condition-celltype pseudobulk profile
table(Cells(pseudo_seurat))
# Pseudo-bulked DE testing
pseudo_seurat <- AggregateExpression(seurat, assays = "RNA", return.seurat = T, group.by = c("orig.ident", "CUD"))
table(Cells(pseudo_seurat))
pseudo_seurat$CUD
Idents(pseudo_seurat)<-"CUD"
Idents(pseudo_seurat)
markers <- FindMarkers(seurat,ident.1 = "CUD", ident.2 = "Ctrl",  min.pct = 0,logfc.threshold = 0,assay = "RNA",features=genes,test.use="DESeq2")
markers <- FindMarkers(pseudo_seurat,ident.1 = "CUD", ident.2 = "Ctrl",  min.pct = 0,logfc.threshold = 0,assay = "RNA",features=genes,test.use="DESeq2")
View(markers)
seurat@meta.data$cluster_condition <- paste0(seurat@meta.data$CUD,"_",seurat@meta.data$celltypes)
Idents(seurat) <- "cluster_condition"
DefaultAssay(seurat) <- "RNA"
# Celltypes, remove Ependymal
celltypes_to_test <- names(table(seurat$celltypes))[-5]
# Pseudo-bulked DE testing
pseudo2_seurat <- AggregateExpression(seurat, assays = "RNA", return.seurat = T, group.by = c("orig.ident", "CUD","celltypes"))
Idents(pseudo2_seurat)<-"CUD"
pseudo2_seurat$celltypes
pseudo2_seurat$CUD_celltype <- paste0(pseudo2_seurat$CUD,"_",pseudo2_seurat$celltypes)
Idents(pseudo2_seurat)<-"CUD_celltype"
Idents(pseudo2_seurat)
for (i in celltypes_to_test){
markers_cl <- FindMarkers(seurat,ident.1 = paste0("CUD_",i), ident.2 = paste0("Ctrl_",i), min.pct = 0,assay = "RNA",logfc.threshold = 0,features=genes)
write.csv(markers_cl, paste0("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/3_results/DE/pseudo_bulked/cluster",i,".csv"), row.names = T)
}
markers_cl <- FindMarkers(seurat,ident.1 = paste0("CUD_",i), ident.2 = paste0("Ctrl_",i), min.pct = 0,assay = "RNA",logfc.threshold = 0,features=genes,test.use="DESeq2")
for (i in celltypes_to_test){
markers_cl <- FindMarkers(seurat,ident.1 = paste0("CUD_",i), ident.2 = paste0("Ctrl_",i), min.pct = 0,assay = "RNA",logfc.threshold = 0,features=genes,test.use="DESeq2")
write.csv(markers_cl, paste0("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/3_results/DE/pseudo_bulked/cluster",i,".csv"), row.names = T)
}
for (i in celltypes_to_test){
markers_cl <- FindMarkers(pseudo2_seurat,ident.1 = paste0("CUD_",i), ident.2 = paste0("Ctrl_",i), min.pct = 0,assay = "RNA",logfc.threshold = 0,features=genes,test.use="DESeq2")
write.csv(markers_cl, paste0("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/3_results/DE/pseudo_bulked/cluster",i,".csv"), row.names = T)
}
clusterD1.MSN <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/3_results/DE/pseudo_bulked/clusterD1-MSN.csv")
View(clusterD1.MSN)
clusterAstrocyte <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/snRNAseq/3_results/DE/pseudo_bulked/clusterAstrocyte.csv")
View(clusterAstrocyte)
BiocManager::install("RNASeqPower")
library(RNASeqPower)
rnapower(depth=20, cv=.4, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=5, cv=.4, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=5, cv=.01, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=20, cv=.01, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=50, cv=.01, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=10, cv=.01, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=4, cv=.01, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=4, cv=.05, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=4, cv=.8, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=4, cv=1, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=20, cv=1, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=10, cv=1, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
rnapower(depth=5, cv=1, effect=c(0.25, 0.5, 1, 1.5),
alpha= .05, power=c(.8, .9))
remove.packages("Seurat")
remove.packages("SeuratObject")
remotes::install_version("Seurat", version = "4.3.0")
remotes::install_version("SeuratObject", version = "4.1.4")
