p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=20)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/1G.pdf",p5,height=5,width=6)
p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=20)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
cc_KEGG <- pairwise_termsim(cc_KEGG)
p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=20)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/1G.pdf",p5,height=5,width=6)
p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=24)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/1G.pdf",p5,height=5,width=6)
p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=24)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/1G.pdf",p5,height=5,width=6)
p5 <- emapplot(cc_KEGG,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=24)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/1G.pdf",p5,height=5,width=6)
cc_GO <- compareCluster(geneClusters =list(RNA=RNA,Protein=prot),fun = "enrichGO",OrgDb = org.Hs.eg.db,keyType = "SYMBOL",pvalueCutoff=0.05,ont="BP")
cc_GO <- pairwise_termsim(cc_GO)
p4 <- emapplot(cc_GO,color="p.adjust",legend_n=2,cex_line=0.1,cex_label_category=0.8,layout="nicely",cex_category=0.7,showCategory=16)+scale_fill_manual(values=c("#0c70c8","#47a72f"))
p4
#### 1C ####
library(ggrepel)
library(ggplot2)
DE_results <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/miRNA/3_DE_results/DE_results.txt", row.names=1)
#### 1F+G #### - GO and KEGG enrichment analyses
library(fgsea)
library(msigdbr)
library(ggplot2)
library(clusterProfiler)
library(enrichplot)
library(DOSE)
library(org.Hs.eg.db)
# With DE genes q<0.25
prot <- limma_results$Gene[limma_results$fdr.limma<0.25 & abs(limma_results$logFC)>0.07]
limma_results <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Protein/EricZillich_P2808_P2900_V1_full_dataset/data_analysis_results_V4/Limma_results_V4.csv")
limma_results$DE <-
with(limma_results,ifelse(pvalue.limma < 0.05 &  logFC > 0.07 , "DE up p<0.05",
ifelse(pvalue.limma < 0.05 & logFC < -0.07 , "DE down p<0.05", "n.s.")))
limma_results$DE <-
factor(limma_results$DE,
ordered = TRUE,
levels = c("DE up p<0.05","DE down p<0.05","n.s."))
limma_results <- limma_results[order(limma_results$pvalue.limma,decreasing = F),]
customPlot <- list(
theme_minimal(base_size = 12),
scale_fill_manual(values=c("#E43F3F","#268989","gray80")),
scale_colour_manual(values=c("#E43F3F","#268989","gray80"))
)
DE_res <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/DE_results.txt")
DE_res$DE <-
with(DE_res,ifelse(pvalue < 0.05  & log2FoldChange > 0.07 , "DE up p<0.05",
ifelse(pvalue < 0.05 & log2FoldChange < -0.07 , "DE down p<0.05", "n.s.")))
DE_res$DE <-
factor(DE_res$DE,
ordered = TRUE,
levels = c("DE up p<0.05","DE down p<0.05","n.s."))
DE_res <- DE_res[order(DE_res$pvalue,decreasing = F),]
library(ggplot2)
customPlot <- list(
theme_minimal(base_size = 12),
scale_fill_manual(values=c("#E43F3F","#268989","gray80")),
scale_colour_manual(values=c("#E43F3F","#268989","gray80"))
)
# With DE genes q<0.25
prot <- limma_results$Gene[limma_results$fdr.limma<0.25 & abs(limma_results$logFC)>0.07]
RNA <- DE_res$Gene[DE_res$padj<0.25 & abs(DE_res$log2FoldChange)>0.07]
cc_GO <- compareCluster(geneClusters =list(RNA=RNA,Protein=prot),fun = "enrichGO",OrgDb = org.Hs.eg.db,keyType = "SYMBOL",pvalueCutoff=0.05,ont="ALL")
cc_GO <- pairwise_termsim(cc_GO)
View(cc_GO@compareClusterResult)
table(cc_GO@compareClusterResult$Description)
sort(table(cc_GO@compareClusterResult$Description))
logTPM_int <- read.table("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTPM.txt", header=TRUE, row.names=1, quote="\"")
View(logTPM_int)
datProt_int <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTMTint.txt", row.names=1, sep="")
View(datProt_int)
diag <- diag(cor(logTPM_int, datProt_int, method = "pearson"))
df_cor <- data.frame(Sample=names(diag),R=unname(diag))
p1 <- ggdotchart(df_cor, x = "Sample", y = "R", ggtheme = theme_pubr(base_size = 10), add = "segment", ylim = c(0, 1), ylab = "mRNA-protein correlation (Pearson R)") +theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())+xlab("Samples (N=39)")
# Plot the results
library(ggpubr)
p1 <- ggdotchart(df_cor, x = "Sample", y = "R", ggtheme = theme_pubr(base_size = 10), add = "segment", ylim = c(0, 1), ylab = "Corrleation CIBERSORT estimates - snRNAseq celltype proportion (Pearson R)")+theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())+xlab("snRNA seq samples (N=16)")+geom_hline(aes(yintercept = median(df_cor$R)),size=0.5,linetype="dashed")+ggtitle("Median R = 0.86")
p1
df_cor <- data.frame(Sample=names(diag),R=unname(diag))
p1 <- ggdotchart(df_cor, x = "Sample", y = "R", ggtheme = theme_pubr(base_size = 10), add = "segment", ylim = c(0, 1), ylab = "mRNA-protein correlation (Pearson R)") +theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())+xlab("Samples (N=39)")
p1
#### S2B ####
RNA_mean <- rowMeans(logTPM_int)
prot_mean <- rowMeans(datProt_int)
dat <- data.frame(RNA=unname(RNA_mean),Protein=unname(prot_mean),row.names = names(RNA_mean))
p2 <- ggscatter(dat, x = "RNA", y = "Protein",
size=0.1,color="gray10",
cor.coef = TRUE, fullrange = T,cor.method = "pearson",
xlab = "log2 TPM - RNA", ylab = "log2 TMT intensity - Protein",title="Correlation by gene")+theme(plot.title = element_text(face = "bold"))
p2
#### S2C ####
# Top 40 are top 1% of expressed proteins - show the correlation for the highly expressed proteins only
dat_high_expr <- dat[order(dat$Protein,decreasing = T),]
dat_high_expr <- dat_high_expr[c(1:40),]
p3 <- ggscatter(dat_high_expr, x = "RNA", y = "Protein",
size=0.1,color="gray10",label = rownames(dat_high_expr),font.label = c(8, "plain"),repel = T,
cor.coef = TRUE, cor.method = "spearman",
xlab = "log2 TPM - RNA", ylab = "log2 TMT intensity - Protein",title="Highly expressed proteins")+theme(plot.title = element_text(face = "bold"))
p3
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
# Convert Seq IDs to Brain IDs
pheno <- read.csv("/zi-flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/pheno_coc_at_death.txt", sep=";")
# Convert Seq IDs to Brain IDs
pheno <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/pheno_coc_at_death.txt", sep=";")
View(pheno)
View(logTPM_int)
pheno$Brain_ID<-paste0("X",pheno$Brain_ID)
phe_ordered <- pheno[match(colnames(logTPM_int),pheno$rn),]
phe_ordered <- pheno[match(colnames(logTPM_int),pheno$Brain_ID),]
View(phe_ordered)
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
colnames(logTPM_int) <- CUD
colnames(datProt_int) <- CUD
dat_CUD <- logTPM_int[,colnames(logTPM_int) == 1]
RNA_mean_dat_CUD <- rowMeans(dat_CUD)
dat_Ctrl <- logTPM_int[,colnames(logTPM_int) == 0]
RNA_mean_dat_Ctrl <- rowMeans(dat_Ctrl)
dat_CUD2 <- datProt_int[,colnames(datProt_int) == 1]
Prot_mean_dat_CUD <- rowMeans(dat_CUD2)
dat_Ctrl2 <- datProt_int[,colnames(datProt_int) == 0]
Prot_mean_dat_Ctrl <- rowMeans(dat_Ctrl2)
dat_CUD <- data.frame(RNA=unname(RNA_mean_dat_CUD),Protein=unname(Prot_mean_dat_CUD),row.names = names(RNA_mean_dat_CUD))
dat_Ctrl <- data.frame(RNA=unname(RNA_mean_dat_Ctrl),Protein=unname(Prot_mean_dat_Ctrl),row.names = names(RNA_mean_dat_Ctrl))
dat_CUD$status <- "CUD"
rownames(dat_CUD) <- paste0("CUD_",rownames(dat_CUD))
dat_Ctrl$status <- "Ctrl"
rownames(dat_Ctrl) <- paste0("Ctrl_",rownames(dat_Ctrl))
dat_combined <- rbind(dat_CUD,dat_Ctrl)
# Plot correlation separated by CUD/Ctrl status
p4 <- ggscatter(dat_combined , x = "RNA", y = "Protein",
size=0.1,color = "status",
palette = c("gray10","red"),
cor.coef = F, fullrange = T,cor.method = "pearson",
xlab = "log2 TPM - RNA", ylab = "log2 TMT intensity - Protein",title="Correlation by CUD status")+theme(plot.title = element_text(face = "bold"))+stat_cor(aes(color = status))+theme(legend.position = "none")
p4
#### S2E ####
# Correlation coefficients for each gene where RNA and protein data is available
diag2 <- diag(cor(t(logTPM_int), t(datProt_int), method = "pearson"))
# Calculate median
med <- median(diag2)
# add quantiles 1% and 99% for gene annotation
q <- quantile(diag2, probs = c(0.01,0.5,0.99))
# Extract genes at both ends of the distribution
low <- sort(diag2[diag2<unname(q[1])])
high <- sort(diag2[diag2>unname(q[3])])
p5 <- gghistogram(diag2, bins = 50, theme = theme_pubr(base_size = 10), fill = "gray",
xlab = "mRNA-protein correlation (Pearson R)",ylab = "Number of genes") +xlim(-1,1)+geom_vline(xintercept=med,col="red")+geom_vline(xintercept=unname(q[1]),col="red",linetype="dashed")+geom_vline(xintercept=unname(q[3]),col="red",linetype="dashed")
p5
View(dat_combined)
#### S2G ####
# Correlation coefficients for each gene where RNA and protein data is available - split by CUD and Ctrl
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
colnames(logTPM_int) <- CUD
colnames(datProt_int) <- CUD
dat_CUD <- logTPM_int[,colnames(logTPM_int) == 1]
RNA_mean_dat_CUD <- rowMeans(dat_CUD)
dat_Ctrl <- logTPM_int[,colnames(logTPM_int) == 0]
RNA_mean_dat_Ctrl <- rowMeans(dat_Ctrl)
dat_CUD2 <- datProt_int[,colnames(datProt_int) == 1]
Prot_mean_dat_CUD <- rowMeans(dat_CUD2)
dat_Ctrl2 <- datProt_int[,colnames(datProt_int) == 0]
Prot_mean_dat_Ctrl <- rowMeans(dat_Ctrl2)
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
colnames(logTPM_int) <- CUD
colnames(datProt_int) <- CUD
dat_CUD <- logTPM_int[,colnames(logTPM_int) == 1]
RNA_mean_dat_CUD <- rowMeans(dat_CUD)
datProt_int <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTMTint.txt", row.names=1, sep="")
View(datProt_int)
logTPM_int <- read.table("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTPM.txt", header=TRUE, row.names=1, quote="\"")
View(logTPM_int)
#### S2A ####
# Calculate the correlation between expr and prot
logTPM_int <- read.csv("/path/to/RNA/mRNA_prot_corr/logTPM.txt", row.names=1, sep="") # Import RNA data
diag <- diag(cor(logTPM_int, datProt_int, method = "pearson"))
df_cor <- data.frame(Sample=names(diag),R=unname(diag))
#### S2B ####
RNA_mean <- rowMeans(logTPM_int)
prot_mean <- rowMeans(datProt_int)
dat <- data.frame(RNA=unname(RNA_mean),Protein=unname(prot_mean),row.names = names(RNA_mean))
pheno <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/pheno_coc_at_death.txt", sep=";")
pheno$Brain_ID<-paste0("X",pheno$Brain_ID)
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
colnames(logTPM_int) <- CUD
colnames(datProt_int) <- CUD
dat_CUD <- logTPM_int[,colnames(logTPM_int) == 1]
RNA_mean_dat_CUD <- rowMeans(dat_CUD)
dat_Ctrl <- logTPM_int[,colnames(logTPM_int) == 0]
RNA_mean_dat_Ctrl <- rowMeans(dat_Ctrl)
dat_CUD2 <- datProt_int[,colnames(datProt_int) == 1]
Prot_mean_dat_CUD <- rowMeans(dat_CUD2)
dat_Ctrl2 <- datProt_int[,colnames(datProt_int) == 0]
Prot_mean_dat_Ctrl <- rowMeans(dat_Ctrl2)
dat_CUD3 <- data.frame(RNA=unname(RNA_mean_dat_CUD),Protein=unname(Prot_mean_dat_CUD),row.names = names(RNA_mean_dat_CUD))
View(dat_CUD3)
dat_CUD_comb <- data.frame(RNA=unname(RNA_mean_dat_CUD),Protein=unname(Prot_mean_dat_CUD),row.names = names(RNA_mean_dat_CUD))
dat_Ctrl_comb <- data.frame(RNA=unname(RNA_mean_dat_Ctrl),Protein=unname(Prot_mean_dat_Ctrl),row.names = names(RNA_mean_dat_Ctrl))
dat_CUD_comb$status <- "CUD"
rownames(dat_CUD_comb) <- paste0("CUD_",rownames(dat_CUD_comb))
dat_Ctrl_comb$status <- "Ctrl"
rownames(dat_Ctrl_comb) <- paste0("Ctrl_",rownames(dat_Ctrl_comb))
dat_combined <- rbind(dat_CUD_comb,dat_Ctrl_comb)
# Plot correlation separated by CUD/Ctrl status
p4 <- ggscatter(dat_combined , x = "RNA", y = "Protein",
size=0.1,color = "status",
palette = c("gray10","red"),
cor.coef = F, fullrange = T,cor.method = "pearson",
xlab = "log2 TPM - RNA", ylab = "log2 TMT intensity - Protein",title="Correlation by CUD status")+theme(plot.title = element_text(face = "bold"))+stat_cor(aes(color = status))+theme(legend.position = "none")
p4
View(dat_Ctrl)
View(dat_Ctrl2)
pheno <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/pheno_coc_at_death.txt", sep=";")
pheno$Brain_ID<-paste0("X",pheno$Brain_ID)
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
phe_ordered <- pheno
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
colnames(logTPM_int
)
logTPM_int <- read.table("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTPM.txt", header=TRUE, row.names=1, quote="\"")
View(logTPM_int)
datProt_int <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/5_mRNA_prot_corr/logTMTint.txt", row.names=1, sep="")
View(datProt_int)
colnames(logTPM_int)
#### S2D ####
# Separate by CUD and Ctrl to see if correlation is different in CUD and Ctrl, for phe_ordered see script 5b_correlation_analysis_transcriptome_proteome.R
CUD <- phe_ordered$CUD[match(colnames(logTPM_int),phe_ordered$Brain_ID)]
CUD
colnames(logTPM_int) <- CUD
colnames(datProt_int) <- CUD
dat_CUD <- logTPM_int[,colnames(logTPM_int) == 1]
RNA_mean_dat_CUD <- rowMeans(dat_CUD)
dat_Ctrl <- logTPM_int[,colnames(logTPM_int) == 0]
RNA_mean_dat_Ctrl <- rowMeans(dat_Ctrl)
dat_CUD2 <- datProt_int[,colnames(datProt_int) == 1]
Prot_mean_dat_CUD <- rowMeans(dat_CUD2)
dat_Ctrl2 <- datProt_int[,colnames(datProt_int) == 0]
Prot_mean_dat_Ctrl <- rowMeans(dat_Ctrl2)
dat_CUD_comb <- data.frame(RNA=unname(RNA_mean_dat_CUD),Protein=unname(Prot_mean_dat_CUD),row.names = names(RNA_mean_dat_CUD))
dat_Ctrl_comb <- data.frame(RNA=unname(RNA_mean_dat_Ctrl),Protein=unname(Prot_mean_dat_Ctrl),row.names = names(RNA_mean_dat_Ctrl))
dat_CUD_comb$status <- "CUD"
rownames(dat_CUD_comb) <- paste0("CUD_",rownames(dat_CUD_comb))
dat_Ctrl_comb$status <- "Ctrl"
rownames(dat_Ctrl_comb) <- paste0("Ctrl_",rownames(dat_Ctrl_comb))
dat_combined <- rbind(dat_CUD_comb,dat_Ctrl_comb)
# Plot correlation separated by CUD/Ctrl status
p4 <- ggscatter(dat_combined , x = "RNA", y = "Protein",
size=0.1,color = "status",
palette = c("gray10","red"),
cor.coef = F, fullrange = T,cor.method = "pearson",
xlab = "log2 TPM - RNA", ylab = "log2 TMT intensity - Protein",title="Correlation by CUD status")+theme(plot.title = element_text(face = "bold"))+stat_cor(aes(color = status))+theme(legend.position = "none")
p4
View(dat_CUD)
View(dat_CUD2)
#### S2G ####
# Correlation coefficients for each gene where RNA and protein data is available - split by CUD and Ctrl
diag_CUD <- diag(cor(t(dat_CUD), t(dat_CUD2), method = "pearson"))
diag_Ctrl <- diag(cor(t(dat_Ctrl), t(dat_Ctrl2), method = "pearson"))
diag_CUD
names(diag_CUD)==names(diag_Ctrl)
identical(names(diag_CUD),names(diag_Ctrl))
abs(diag_CUD-diag_Ctrl)
diag_CUD-diag_Ctrl
data.frame(CUD=unname(diag_CUD),Ctrl=unname(diag_Ctrl))
d<-data.frame(CUD=unname(diag_CUD),Ctrl=unname(diag_Ctrl))
View(d)
rownames(d)<- names(diag_CUD)
dat_diff <- data.frame(CUD=unname(diag_CUD),Ctrl=unname(diag_Ctrl))
rownames(dat_diff)<- names(diag_CUD)
dat_diff$diff <- abs(diag_CUD-diag_Ctrl)
View(dat_diff)
dat_diff$diff <- diag_CUD-diag_Ctrl
diag_diff <- diag_CUD-diag_Ctrl
diag_diff<- sort(diag_diff,decreasing = TRUE)
gse_diff <- gseGO(
diag_diff,
OrgDb=org.Hs.eg.db,
keyType = "SYMBOL",
exponent = 1,
minGSSize = 10,
maxGSSize = 500,
eps = 0,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
verbose = TRUE,
seed = FALSE,
by = "fgsea")
gse_diff<- pairwise_termsim(gse_diff)
gse_pos_diff <- gse_diff@result[gse_diff@result$NES > 0,]
gse_pos2_diff <- gse_pos_diff[order(gse_pos_diff$NES,decreasing=T),]
gse_pos2_diff <- gse_pos2_diff[gse_pos2_diff$p.adjust<0.05,c("Description","NES","p.adjust")]
gse_pos2_diff$dir <- "positive"
gse_neg_diff <- gse_diff@result[gse_diff@result$NES < 0,]
gse_neg2_diff <- gse_neg_diff[order(gse_neg_diff$NES,decreasing=F),]
gse_neg2_diff <- gse_neg2_diff[gse_neg2_diff$p.adjust<0.05,c("Description","NES","p.adjust")]
gse_neg2_diff <- gse_neg2_diff[c(1:10),] # extract the 10 most significant pathways for plotting
gse_neg2_diff$dir <- "negative"
gse <- rbind(gse_pos2_diff,gse_neg2_diff)
stars_gen <- function(x){
stars <- c( "***", "**", "*","")
vec <- c(0, 0.001, 0.01, 0.05,1.01)
i <- findInterval(x, vec)
stars[i]
}
gse_diff$lab <- stars_gen(gse_diff$p.adjust)
gsea_plot <- ggbarplot(gsegse_diff, x = "Description", y = "NES",
fill = "dir",
color = "black",
sort.val = "desc",
sort.by.groups = FALSE,
lab.size=2)+ylim(-5,5)+NoLegend()+xlab(NULL)+scale_fill_manual(values=c("#268989","#E43F3F"))+ylab("GSEA set statistic")+ geom_text(aes(y=0.8*abs(NES)/NES,label = lab), vjust = 0.5,hjust=0,size=6)+coord_flip()+theme_minimal() + theme(text=element_text(size=20))
gsea_plot <- ggbarplot(gse_diff, x = "Description", y = "NES",
fill = "dir",
color = "black",
sort.val = "desc",
sort.by.groups = FALSE,
lab.size=2)+ylim(-5,5)+NoLegend()+xlab(NULL)+scale_fill_manual(values=c("#268989","#E43F3F"))+ylab("GSEA set statistic")+ geom_text(aes(y=0.8*abs(NES)/NES,label = lab), vjust = 0.5,hjust=0,size=6)+coord_flip()+theme_minimal() + theme(text=element_text(size=20))
gse_diff <- rbind(gse_pos2_diff,gse_neg2_diff)
stars_gen <- function(x){
stars <- c( "***", "**", "*","")
vec <- c(0, 0.001, 0.01, 0.05,1.01)
i <- findInterval(x, vec)
stars[i]
}
gse_diff$lab <- stars_gen(gse_diff$p.adjust)
library(Seurat)
gsea_plot <- ggbarplot(gse_diff, x = "Description", y = "NES",
fill = "dir",
color = "black",
sort.val = "desc",
sort.by.groups = FALSE,
lab.size=2)+ylim(-5,5)+NoLegend()+xlab(NULL)+scale_fill_manual(values=c("#268989","#E43F3F"))+ylab("GSEA set statistic")+ geom_text(aes(y=0.8*abs(NES)/NES,label = lab), vjust = 0.5,hjust=0,size=6)+coord_flip()+theme_minimal() + theme(text=element_text(size=20))
gsea_plot
gsea_plot
View(gse_neg_diff)
View(gse_pos_diff)
View(gse_pos2_diff)
View(gse_neg2_diff)
View(gse_pos2_diff)
View(gse_diff)
gse_diff <- gseGO(
diag_diff,
OrgDb=org.Hs.eg.db,
keyType = "SYMBOL",
exponent = 1,
minGSSize = 10,
maxGSSize = 500,
eps = 0,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
verbose = TRUE,
seed = FALSE,
by = "fgsea")
gse_diff<- pairwise_termsim(gse_diff)
View(gse_diff@result)
#### S2G ####
# Correlation coefficients for each gene where RNA and protein data is available - split by CUD and Ctrl
diag_CUD <- diag(cor(t(dat_CUD), t(dat_CUD2), method = "pearson"))
diag_Ctrl <- diag(cor(t(dat_Ctrl), t(dat_Ctrl2), method = "pearson"))
dat_diff <- data.frame(CUD=unname(diag_CUD),Ctrl=unname(diag_Ctrl))
rownames(dat_diff)<- names(diag_CUD)
dat_diff$diff <- diag_CUD-diag_Ctrl
View(dat_diff)
dat_diff <- dat_diff[order(dat_diff$diff,decreasing = T),]
# select top 10 positive and negative differences between correlation coefficients
dat_diff_pos <- dat_diff[c(1:10),]
dat_diff_neg <- dat_diff[c(3926:3935),]
View(dat_diff_neg)
View(dat_diff_pos)
# select top 10 positive and negative differences between correlation coefficients
dat_diff_top10 <- rbind(dat_diff[c(1:10),],dat_diff[c(3926:3935),])
View(dat_diff_top10)
dat_diff_top10$Gene <- rownames(dat_diff_top10)
ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")
ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")
dat_diff_top10$Gene <- factor(rownames(dat_diff_top10),levels=rownames(dat_diff_top10))
ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()
p_diff
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")
p_diff
t(dat_diff)
View(t(dat_diff))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",gsea_plot,width=8,height=4)
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=8,height=4)
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=10,height=3)
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.5,hjust=1))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.5,hjust=0.5))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,hjust=0.5))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.5))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.25))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=1))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.8))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity",fill="grey60")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.8))
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=12,height=2.5)
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=10,height=2.5)
p_diff <- ggplot(data=dat_diff_top10,aes(x=Gene,y=diff))+geom_bar(stat="identity",fill="grey60")+theme_minimal()+xlab("")+ylab("R CUD - R Ctrl")+theme(axis.text.x = element_text(angle = 45,vjust=0.8))+geom_hline(yintercept = 0)
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=10,height=2.5)
write.table(dat_diff,"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",row.names = T, col.names = T, quote=F, sep=";")
ggsave("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/S2G.pdf",p_diff,width=10,height=2.5)
write.table(dat_diff,"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/dat_diff_S2G",row.names = T, col.names = T, quote=F, sep=";")
write.table(dat_diff,"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/dat_diff_S2G.txt",row.names = T, col.names = T, quote=F, sep=";")
View(dat_diff)
#### 1D ####
DE_res <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/mRNA/3_DE_results/DE_results.txt")
DE_res$DE <-
with(DE_res,ifelse(pvalue < 0.05  & log2FoldChange > 0.07 , "DE up p<0.05",
ifelse(pvalue < 0.05 & log2FoldChange < -0.07 , "DE down p<0.05", "n.s.")))
DE_res$DE <-
factor(DE_res$DE,
ordered = TRUE,
levels = c("DE up p<0.05","DE down p<0.05","n.s."))
DE_res <- DE_res[order(DE_res$pvalue,decreasing = F),]
library(ggplot2)
customPlot <- list(
theme_minimal(base_size = 12),
scale_fill_manual(values=c("#E43F3F","#268989","gray80")),
scale_colour_manual(values=c("#E43F3F","#268989","gray80"))
)
p2 <- ggplot(data = DE_res, aes(log2FoldChange, -log10(pvalue), colour = DE)) + xlim(-3,3)+ ylim(0,6.7)+
geom_point(size=0.2) + geom_hline(aes(yintercept = -log10(0.05)),size=0.2) + geom_hline(aes(yintercept = -log10(9.383242e-05)),size=0.2,linetype="dashed")+geom_hline(aes(yintercept = -log10(0.0091)),size=0.2,linetype="dotted") + geom_vline(aes(xintercept=0),size=0.2)+
geom_text_repel(aes(label = c(DE_res$Gene[DE_res$log2FoldChange>0][c(1:5)],DE_res$Gene[DE_res$log2FoldChange<0][c(1:5)]),segment.size=0.2),
data = rbind(DE_res[DE_res$log2FoldChange>0,][c(1:5),],DE_res[DE_res$log2FoldChange<0,][c(1:5),]),
vjust = 0, nudge_y = 0.1, size = 3) +
xlab("log2FoldChange") +ylab("")+
customPlot+theme(legend.position = "none")+ggtitle("RNA")+theme(plot.title = element_text(hjust = 0.5))
#### 1E ####
limma_results <- read.csv("/path/to/protein/Limma_results.csv")
#### 1E ####
limma_results <- read.csv("/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Protein/EricZillich_P2808_P2900_V1_full_dataset/data_analysis_results_V4/Limma_results_V4.csv")
limma_results$DE <-
with(limma_results,ifelse(pvalue.limma < 0.05 &  logFC > 0.07 , "DE up p<0.05",
ifelse(pvalue.limma < 0.05 & logFC < -0.07 , "DE down p<0.05", "n.s.")))
limma_results$DE <-
factor(limma_results$DE,
ordered = TRUE,
levels = c("DE up p<0.05","DE down p<0.05","n.s."))
limma_results <- limma_results[order(limma_results$pvalue.limma,decreasing = F),]
customPlot <- list(
theme_minimal(base_size = 12),
scale_fill_manual(values=c("#E43F3F","#268989","gray80")),
scale_colour_manual(values=c("#E43F3F","#268989","gray80"))
)
p3 <- ggplot(data = limma_results, aes(logFC, -log10(pvalue.limma), colour = DE)) +
geom_vline(aes(xintercept = 0)) + xlim(-1,1)+ ylim(0,6.7)+
geom_point(size=0.2) + geom_hline(aes(yintercept = -log10(0.05)),size=0.2) + geom_hline(aes(yintercept = -log10(1.17096e-05)),size=0.2,linetype="dashed")+ geom_hline(aes(yintercept = -log10(0.0165)),size=0.2,linetype="dotted")+
geom_text_repel(aes(label = c(limma_results$Gene[limma_results$logFC>0][c(1:5)],limma_results$Gene[limma_results$logFC<0][c(1:5)]),segment.size=0.2),
data = rbind(limma_results[limma_results$logFC>0,][c(1:5),],limma_results[limma_results$logFC<0,][c(1:5),]),
vjust = 0, nudge_y = 0.1, size = 3)  +
xlab("log2FoldChange") +ylab("")+
customPlot+theme(legend.position = "none")+ggtitle("protein")+theme(plot.title = element_text(hjust = 0.5))
library(fgsea)
library(msigdbr)
library(ggplot2)
library(clusterProfiler)
library(enrichplot)
library(DOSE)
library(org.Hs.eg.db)
prot <- limma_results$Gene[limma_results$fdr.limma<0.25 & abs(limma_results$logFC)>0.07]
EIDs <- bitr(prot,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
prot_KEGG <- EIDs[!duplicated(EIDs[c("ENTREZID")]),"ENTREZID"]
RNA <- DE_res$Gene[DE_res$padj<0.25 & abs(DE_res$log2FoldChange)>0.07]
EIDs <- bitr(RNA,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
RNA_KEGG <- EIDs[!duplicated(EIDs[c("ENTREZID")]),"ENTREZID"]
cc_GO <- compareCluster(geneClusters =list(RNA=RNA,Protein=prot),fun = "enrichGO",OrgDb = org.Hs.eg.db,keyType = "SYMBOL",pvalueCutoff=0.05,ont="ALL")
cc_GO <- pairwise_termsim(cc_GO)
cc_KEGG <- compareCluster(geneClusters =list(RNA=RNA_KEGG,Protein=prot_KEGG),fun = "enrichKEGG",keyType = "kegg",pvalueCutoff=0.05)
cc_KEGG <- pairwise_termsim(cc_KEGG)
View(cc_GO@compareClusterResult)
write.table(cc_GO@compareClusterResult,"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/GO_bulk.txt",sep=";",row.names = F,col.names = T, quote=F)
write.table(cc_KEGG@compareClusterResult,"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/KEGG_bulk.txt",sep=";",row.names = F,col.names = T, quote=F)
View(cc_GO@compareClusterResult[duplicated(cc_GO@compareClusterResult$Description),])
View(cc_GO@compareClusterResult[duplicated(cc_GO@compareClusterResult$Description)]
cc_GO@compareClusterResult$Description[duplicated(cc_GO@compareClusterResult$Description)]
cc_GO@compareClusterResult[cc_GO@compareClusterResult$Description %in% cc_GO@compareClusterResult$Description[duplicated(cc_GO@compareClusterResult$Description)],]
write.table(cc_GO@compareClusterResult[cc_GO@compareClusterResult$Description %in% cc_GO@compareClusterResult$Description[duplicated(cc_GO@compareClusterResult$Description)],],"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/GO_overlap_25%_bulk.txt",sep=";",row.names = F,col.names = T, quote=F)
cc_KEGG@compareClusterResult[cc_KEGG@compareClusterResult$Description %in% cc_KEGG@compareClusterResult$Description[duplicated(cc_KEGG@compareClusterResult$Description)],]
# With DE genes q<0.25
prot <- limma_results$Gene[limma_results$pvalue.limma<0.05 & abs(limma_results$logFC)>0.07]
EIDs <- bitr(prot,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
prot_KEGG <- EIDs[!duplicated(EIDs[c("ENTREZID")]),"ENTREZID"]
RNA <- DE_res$Gene[DE_res$pvalue<0.05 & abs(DE_res$log2FoldChange)>0.07]
EIDs <- bitr(RNA,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
RNA_KEGG <- EIDs[!duplicated(EIDs[c("ENTREZID")]),"ENTREZID"]
cc_GO <- compareCluster(geneClusters =list(RNA=RNA,Protein=prot),fun = "enrichGO",OrgDb = org.Hs.eg.db,keyType = "SYMBOL",pvalueCutoff=0.05,ont="ALL")
cc_GO <- pairwise_termsim(cc_GO)
cc_KEGG <- compareCluster(geneClusters =list(RNA=RNA_KEGG,Protein=prot_KEGG),fun = "enrichKEGG",keyType = "kegg",pvalueCutoff=0.05)
cc_KEGG <- pairwise_termsim(cc_KEGG)
cc_GO@compareClusterResult[cc_GO@compareClusterResult$Description %in% cc_GO@compareClusterResult$Description[duplicated(cc_GO@compareClusterResult$Description)],]
write.table(cc_GO@compareClusterResult[cc_GO@compareClusterResult$Description %in% cc_GO@compareClusterResult$Description[duplicated(cc_GO@compareClusterResult$Description)],],"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/GO_overlap_0.05_bulk.txt",sep=";",row.names = F,col.names = T, quote=F)
write.table(cc_KEGG@compareClusterResult[cc_KEGG@compareClusterResult$Description %in% cc_KEGG@compareClusterResult$Description[duplicated(cc_KEGG@compareClusterResult$Description)],],"/zi/flstorage/group_genepi/data/EP/SysMed/Cocaine/VS_multiome/Figures_revision/KEGG_overlap_0.05_bulk.txt",sep=";",row.names = F,col.names = T, quote=F)
